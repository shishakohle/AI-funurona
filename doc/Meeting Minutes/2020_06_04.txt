04/06/2020 - 15:00 & 16:00
AI - Fanorona 
Kerstin, Ingo, Lukas, Anna

Tasks until today:
	- Ingo: ev. Useraction als member zur Klasse, Abfrage widthdraw/approach als useraction (enum), getUseraction mit Übergabe von lastUseraction (2.6)
	- Kerstin: merge , mit Ingo useraction approach/widthdraw
	- Lukas: globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> dort wo wir wollen anzeigen, (B)
	- Anna: clear errors
	- ALLE: Gedanken zu AI machen, auf Meeting vorbereiten

During Meeting:
	- Update of Tasks
	- Goals: 
		> finish game implementation so that it all works
		> prepare for Meeting with Mehnen
	- Meetingwith Mehnen: Do.4 um 16 Uhr auf Teams

Meeting Mehnen:
	- show game
		> useraction
		> check ruleset
		> move and capture
		> anotherMove - grid if can capture (again)
	- questions
		> wie vorausschauend soll AI sein - nächster Zug/mehrere
		> wieviel Zeit brauchen wir für AI Programmierung (--> Terminverschiebung)
		> haben wir guten Ansatzpunkt mit Grid und Useraction
		> C++ 11 verwenden - passt?
		> wie Algorithmusanalysen vorstellen? (time & memory usage)
		> wie make tests vorstellen - wie detailiert, auf Module gehen, etc?
		> was sein Ansatz um überhaupt einen Test aufzusetzten

Next Goals/Tasks: --> continue
	- Ingo: ev. Useraction als member zur Klasse, Abfrage widthdraw/approach als useraction (enum), getUseraction mit Übergabe von lastUseraction (2.6)
	- Kerstin: merge , mit Ingo useraction approach/widthdraw
	- Lukas: globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> dort wo wir wollen anzeigen, (B)
	- Anna: clear errors
	- ALLE: Gedanken zu AI machen, auf Meeting vorbereiten

Still to do:
	- Style of enum team color in cout 
	- nur mit bereits in dieser Runde bewegten Token (pro Runde nur 1 Token bewegbar)
	- another move --> ask user for input of row/column/skip --> cant skip first move 
	- ev.: Ausweg für quick return bei checkIfCapturePossible sobald einer schmeißen kann, damit man nicht alles durchrechnen muss
	- globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> Lukas
	- useraction - add: rule --> rules of funorona
	- Abfrage: wen möchtest du schmeißen --> approach or widthdraw als useraction - wie? --> in useraction hinein und nur abfragen, wenn notwendig --> Ingo
	- nur mit bereits in dieser Runde bewegten Token (pro Runde nur 1 Token bewegbar)
		--> Second+ Move: getUseraction --> übergeben von lastuseraction (2.6) - Ingo
	- cant skip first move - Regelabfrage (counter move) (B) - Lukas
		--> differentiate between first move and additional moves (with SAME token) --> save activeToken (X)

Meeting with Mehnen:
	- 


Next Meeting: Fr. 05.06, 15:00 Uhr 


