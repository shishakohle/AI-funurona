02/06/2020 - 17:45
AI - Fanorona 
Kerstin, Ingo, Lukas, Anna

Tasks until today:
	- Ingo: klassen diagram + aufräumen --> mit Anna --> grid getter & setter to save grid in actual Token, useraction mit Inhalt befüllen --> Ausständig: position + direction abfragen --> endposition berechnen fehlt (getNeighbor von Kerstin)
	- Kerstin: improvement of capturing & makes tests, combine Annas & Kerstins, (29.5) - siehe unten --> capturing funktioniert, zusmammenlegen nicht sinnvoll (gridmethode, capturingPossible)
	- Lukas: globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> dort wo wir wollen anzeigen, AI Gedanken machen --> to be continued
	- Anna: (F) --> continue/improve & test!, add flowchart of capturingPossible & wo einbauen in move/turn (draw.io), (X) --> capturingPossible funktioniert soweit alles
	- ALLE: Gedanken zu AI machen

During Meeting:
> Update of Tasks
> Goals: 
	- finish game implementation
	- user only uses start coordinate und direction
	- clear seperation of useraction and rules
> Meetingwith Mehnen: Do.4 um 16 Uhr auf Teams

Next Goals/Tasks: --> continue
	- Ingo: ev. Useraction als member zur Klasse, Abfrage widthdraw/approach als useraction (enum), getUseraction mit Übergabe von lastUseraction (2.6)
	- Kerstin: merge , mit Ingo useraction approach/widthdraw
	- Lukas: globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> dort wo wir wollen anzeigen, (B)
	- Anna: (W)
	- ALLE: Gedanken zu AI machen, auf Meeting vorbereiten

Still to do:
	- Style of enum team color in cout 
	- 7) Beim ersten Zug --> schmeißen = Pflicht, dann weitere Züge optional: --> DONE
		- Player darf weiterfahren, wenn er mit darauffolgenden Zug wieder jemanden schmeißt --> dann kein Zug ohne schmeißen möglich --> DONE
		- nur mit bereits in dieser Runde bewegten Token (pro Runde nur 1 Token bewegbar)
	- Erkennung ob gegnerische Tokens schmeißbar sind --> another move (+ Abfrage) --> 4) Zug muss jemanden schmeißen, wenn generell möglich, ansosnten "normales" ziehen möglich (F) --> DONE
	- setTokensLeft mit abzählen der einzelnen Tokens am Spielbrett --> Eigenschaft vom Spielbrett statt tokensLeft --> einbauen in gameOver() --> Kerstin (29.5) --> DONE
	- another move --> ask user for input of row/column/skip --> cant skip first move 
	- ev.: Ausweg für quick return bei checkIfCapturePossible sobald einer schmeißen kann, damit man nicht alles durchrechnen muss
	- better user interface (INGO) --> DONE
	- combine Kerstin & Anna capturing/checkIfCanCapture to reduce redundant code --> DONE (wont combine)
	- globale errormessage --> was wenn mehrere messages, wieder resetten (Y) --> liste an error messages? --> Lukas
	- subtract from numberTokens (leftTokens) (A) --> DONE
	- useraction - add: rule --> rules of funorona
	- Abfrage: wen möchtest du schmeißen --> approach or widthdraw als useraction - wie? --> in useraction hinein und nur abfragen, wenn notwendig --> Ingo
	- nur mit bereits in dieser Runde bewegten Token (pro Runde nur 1 Token bewegbar)
		--> Second+ Move: getUseraction --> übergeben von lastuseraction (2.6) - Ingo
		--> braucht validierung ob eh richtiger token - Regel (W) - Anna
	- cant skip first move - Regelabfrage (counter move) (B) - Lukas
		--> differentiate between first move and additional moves (with SAME token) --> save activeToken (X)

Next Meeting: Mi. 03.06, 18:30 Uhr (preparation for Mehnen)


